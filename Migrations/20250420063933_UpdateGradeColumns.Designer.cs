// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolSystem.Data;

#nullable disable

namespace SchoolSystem.Migrations
{
    [DbContext(typeof(SystemSchoolDbContext))]
    [Migration("20250420063933_UpdateGradeColumns")]
    partial class UpdateGradeColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolSystem.Data.Acount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Passwords");

                    b.Property<string>("ResetToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UsersName");

                    b.HasKey("Id");

                    b.ToTable("Acounts", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<int>("AbsentDays")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int>("PresentDays")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDays")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("[PresentDays] + [AbsentDays]", true);

                    b.HasKey("AttendanceId");

                    b.HasIndex("IdStudent");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("SchoolSystem.Data.ClassLectuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClass")
                        .HasColumnType("int");

                    b.Property<int>("IdLectuer")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ClassLec__3213E83F8327C66B");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdLectuer");

                    b.ToTable("ClassLectuer", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Grade", b =>
                {
                    b.Property<int>("GradesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradesId"));

                    b.Property<int>("Activity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Final")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("FirstMonth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("IdLectuer")
                        .HasColumnType("int")
                        .HasColumnName("IdLectuer");

                    b.Property<int?>("IdStudent")
                        .HasColumnType("int")
                        .HasColumnName("IdStudent");

                    b.Property<int?>("IdTeacher")
                        .HasColumnType("int")
                        .HasColumnName("IdTeacher");

                    b.Property<int?>("LectuerId")
                        .HasColumnType("int");

                    b.Property<int>("Mid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SecondMonth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("[FirstMonth] + [Mid] + [SecondMonth] + [Activity] + [Final]", true);

                    b.HasKey("GradesId");

                    b.HasIndex("IdLectuer");

                    b.HasIndex("IdStudent");

                    b.HasIndex("IdTeacher");

                    b.HasIndex("LectuerId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SchoolSystem.Data.Lectuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Lectuer__3213E83FBA6843F5");

                    b.ToTable("Lectuer", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Menegar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Menegar__3213E83FE96BFA1F");

                    b.ToTable("Menegar", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Student__3213E83F6F20DDDC");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentAverage", b =>
                {
                    b.Property<int>("IdStudentAvg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudentAvg"));

                    b.Property<double>("AverageGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int?>("IdClass")
                        .HasColumnType("int");

                    b.Property<int?>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TheClassId")
                        .HasColumnType("int");

                    b.HasKey("IdStudentAvg");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdStudent");

                    b.HasIndex("StudentId");

                    b.HasIndex("TheClassId");

                    b.ToTable("StudentAverages");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClass")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__StudentC__3213E83F95F82A92");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdStudent");

                    b.ToTable("StudentClass", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentLectuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdLectuer")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__StudentL__3213E83F373E3AFF");

                    b.HasIndex("IdLectuer");

                    b.HasIndex("IdStudent");

                    b.ToTable("StudentLectuer", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int>("IdTeacher")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__StudentT__3213E83F7AD0C21E");

                    b.HasIndex("IdStudent");

                    b.HasIndex("IdTeacher");

                    b.ToTable("StudentTeacher", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Teacher__3213E83F92AB32EF");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.TeacherClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClass")
                        .HasColumnType("int");

                    b.Property<int>("IdTeacher")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TeacherC__3213E83FDA6F83CA");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdTeacher");

                    b.ToTable("TeacherClass", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.TeacherLectuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdLectuer")
                        .HasColumnType("int");

                    b.Property<int>("IdTeacher")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TeacherL__3213E83F5B2FD59A");

                    b.HasIndex("IdLectuer");

                    b.HasIndex("IdTeacher");

                    b.ToTable("TeacherLectuer", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.TheClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__TheClass__3213E83FD60CD186");

                    b.ToTable("TheClass", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Attendance", b =>
                {
                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany()
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.ClassLectuer", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("ClassLectuers")
                        .HasForeignKey("IdClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassLect__IdCla__66603565");

                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany("ClassLectuers")
                        .HasForeignKey("IdLectuer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassLect__IdLec__6754599E");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdLectuerNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.Grade", b =>
                {
                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany()
                        .HasForeignKey("IdLectuer");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany()
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany()
                        .HasForeignKey("IdTeacher");

                    b.HasOne("SchoolSystem.Data.Lectuer", null)
                        .WithMany("Grades")
                        .HasForeignKey("LectuerId");

                    b.HasOne("SchoolSystem.Data.Student", null)
                        .WithMany("Grades")
                        .HasForeignKey("StudentId");

                    b.HasOne("SchoolSystem.Data.Teacher", null)
                        .WithMany("Grades")
                        .HasForeignKey("TeacherId");

                    b.Navigation("IdLectuerNavigation");

                    b.Navigation("IdStudentNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentAverage", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany()
                        .HasForeignKey("IdClass");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany()
                        .HasForeignKey("IdStudent");

                    b.HasOne("SchoolSystem.Data.Student", null)
                        .WithMany("StudentAverages")
                        .HasForeignKey("StudentId");

                    b.HasOne("SchoolSystem.Data.TheClass", null)
                        .WithMany("StudentAverages")
                        .HasForeignKey("TheClassId");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentClass", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("StudentClasses")
                        .HasForeignKey("IdClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentCl__IdCla__5812160E");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("StudentClasses")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentCl__IdStu__571DF1D5");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentLectuer", b =>
                {
                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany("StudentLectuers")
                        .HasForeignKey("IdLectuer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentLe__IdLec__5BE2A6F2");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("StudentLectuers")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentLe__IdStu__5AEE82B9");

                    b.Navigation("IdLectuerNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentTeacher", b =>
                {
                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("StudentTeachers")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentTe__IdStu__534D60F1");

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany("StudentTeachers")
                        .HasForeignKey("IdTeacher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentTe__IdTea__5441852A");

                    b.Navigation("IdStudentNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.TeacherClass", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("TeacherClasses")
                        .HasForeignKey("IdClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherCl__IdCla__5FB337D6");

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany("TeacherClasses")
                        .HasForeignKey("IdTeacher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherCl__IdTea__5EBF139D");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.TeacherLectuer", b =>
                {
                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany("TeacherLectuers")
                        .HasForeignKey("IdLectuer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherLe__IdLec__6383C8BA");

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany("TeacherLectuers")
                        .HasForeignKey("IdTeacher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherLe__IdTea__628FA481");

                    b.Navigation("IdLectuerNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.Lectuer", b =>
                {
                    b.Navigation("ClassLectuers");

                    b.Navigation("Grades");

                    b.Navigation("StudentLectuers");

                    b.Navigation("TeacherLectuers");
                });

            modelBuilder.Entity("SchoolSystem.Data.Student", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("StudentAverages");

                    b.Navigation("StudentClasses");

                    b.Navigation("StudentLectuers");

                    b.Navigation("StudentTeachers");
                });

            modelBuilder.Entity("SchoolSystem.Data.Teacher", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("StudentTeachers");

                    b.Navigation("TeacherClasses");

                    b.Navigation("TeacherLectuers");
                });

            modelBuilder.Entity("SchoolSystem.Data.TheClass", b =>
                {
                    b.Navigation("ClassLectuers");

                    b.Navigation("StudentAverages");

                    b.Navigation("StudentClasses");

                    b.Navigation("TeacherClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
