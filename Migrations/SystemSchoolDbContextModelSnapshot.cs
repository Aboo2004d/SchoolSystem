// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolSystem.Data;

#nullable disable

namespace SchoolSystem.Migrations
{
    [DbContext(typeof(SystemSchoolDbContext))]
    partial class SystemSchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolSystem.Data.Acount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Passwords")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ResetToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ResetTokenExpiry")
                        .HasColumnType("datetime");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsersName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Acounts__3213E83F1B5AE3B5");

                    b.ToTable("Acounts");
                });

            modelBuilder.Entity("SchoolSystem.Data.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendanceStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValue("0")
                        .IsFixedLength();

                    b.Property<DateOnly?>("DateAndTime")
                        .HasColumnType("date");

                    b.Property<string>("Excuse")
                        .HasColumnType("text");

                    b.Property<int?>("IdClass")
                        .HasColumnType("int");

                    b.Property<int?>("IdLectuer")
                        .HasColumnType("int");

                    b.Property<int?>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int?>("IdTeacher")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Attendan__3213E83FAD8350D2");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdLectuer");

                    b.HasIndex("IdStudent");

                    b.HasIndex("IdTeacher");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.ClassLectuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdClass")
                        .HasColumnType("int");

                    b.Property<int?>("IdLectuer")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ClassLec__3213E83F8327C66B");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdLectuer");

                    b.ToTable("ClassLectuer", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOccurred")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("SchoolSystem.Data.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TheType")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id")
                        .HasName("PK__Gender__3214EC070A22819D");

                    b.ToTable("Gender", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Grade", b =>
                {
                    b.Property<int>("GradesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GradesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradesId"));

                    b.Property<int?>("Activity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("Final")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("FirstMonth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("IdClass")
                        .HasColumnType("int");

                    b.Property<int?>("IdLectuer")
                        .HasColumnType("int");

                    b.Property<int?>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int?>("IdTeacher")
                        .HasColumnType("int");

                    b.Property<int?>("Mid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("SecondMonth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("(((([FirstMonth]+[Mid])+[SecondMonth])+[Activity])+[Final])", false);

                    b.HasKey("GradesId")
                        .HasName("PK__Grades__931A40BF88D8CDCA");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdLectuer");

                    b.HasIndex("IdStudent");

                    b.HasIndex("IdTeacher");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SchoolSystem.Data.Lectuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Lectuer__3213E83FBA6843F5");

                    b.ToTable("Lectuer", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.LogProgress", b =>
                {
                    b.Property<DateTime?>("LoggedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Message")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Step")
                        .HasColumnType("int");

                    b.ToTable("LogProgress", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Menegar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdSchool")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Menegar__3213E83FE96BFA1F");

                    b.HasIndex("IdSchool");

                    b.ToTable("Menegar", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdGender")
                        .HasColumnType("int");

                    b.Property<int?>("IdStatusSchool")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__School__3214EC07F11AFDBA");

                    b.HasIndex("IdGender");

                    b.HasIndex("IdStatusSchool");

                    b.ToTable("School", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.StatusSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Condition")
                        .HasColumnType("int")
                        .HasColumnName("condition");

                    b.Property<string>("TheType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__StatusSc__3214EC073DB2CBA3");

                    b.ToTable("StatusSchool", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdSchool")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Student__3213E83F6F20DDDC");

                    b.HasIndex(new[] { "IdSchool" }, "IX_Student_IdSchool");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentAverage", b =>
                {
                    b.Property<int>("IdStudentAvg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudentAvg"));

                    b.Property<double>("AverageGrade")
                        .HasColumnType("float");

                    b.Property<int?>("IdClass")
                        .HasColumnType("int");

                    b.Property<int?>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("IdStudentAvg")
                        .HasName("PK__StudentA__9A002AFC4CA4B91A");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdStudent");

                    b.ToTable("StudentAverage", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdClass")
                        .HasColumnType("int");

                    b.Property<int?>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__StudentC__3213E83F95F82A92");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdStudent");

                    b.ToTable("StudentClass", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentLectuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdLectuer")
                        .HasColumnType("int");

                    b.Property<int?>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__StudentL__3213E83F373E3AFF");

                    b.HasIndex("IdLectuer");

                    b.HasIndex("IdStudent");

                    b.ToTable("StudentLectuer", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int?>("IdTeacher")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__StudentT__3213E83F7AD0C21E");

                    b.HasIndex("IdStudent");

                    b.HasIndex("IdTeacher");

                    b.ToTable("StudentTeacher", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdSchool")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Teacher__3213E83F92AB32EF");

                    b.HasIndex(new[] { "IdSchool" }, "IX_Teacher_IdSchool");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.TeacherClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdClass")
                        .HasColumnType("int");

                    b.Property<int?>("IdTeacher")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TeacherC__3213E83FDA6F83CA");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdTeacher");

                    b.ToTable("TeacherClass", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.TeacherLectuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdLectuer")
                        .HasColumnType("int");

                    b.Property<int?>("IdTeacher")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TeacherL__3213E83F5B2FD59A");

                    b.HasIndex("IdLectuer");

                    b.HasIndex("IdTeacher");

                    b.ToTable("TeacherLectuer", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.TheClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__TheClass__3213E83FD60CD186");

                    b.ToTable("TheClass", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.Data.Attendance", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("Attendances")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK_Attendance_Class");

                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany("Attendances")
                        .HasForeignKey("IdLectuer")
                        .HasConstraintName("FK_Attendance_Lectuer");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("Attendances")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK_Attendance_Student");

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany("Attendances")
                        .HasForeignKey("IdTeacher")
                        .HasConstraintName("FK_Attendance_Teacher");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdLectuerNavigation");

                    b.Navigation("IdStudentNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.ClassLectuer", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("ClassLectuers")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK_ClassLectuer_Class");

                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany("ClassLectuers")
                        .HasForeignKey("IdLectuer")
                        .HasConstraintName("FK_ClassLectuer_Lectuer");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdLectuerNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.Grade", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK__Grades__IdClass__0D0FEE32");

                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("IdLectuer")
                        .HasConstraintName("FK_Grades_Lectuer");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK_Grades_Student");

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("IdTeacher")
                        .HasConstraintName("FK_Grades_Teacher");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdLectuerNavigation");

                    b.Navigation("IdStudentNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.Menegar", b =>
                {
                    b.HasOne("SchoolSystem.Data.School", "IdSchoolNavigation")
                        .WithMany("Menegars")
                        .HasForeignKey("IdSchool")
                        .HasConstraintName("FK__Menegar__IdSchoo__23F3538A");

                    b.Navigation("IdSchoolNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.School", b =>
                {
                    b.HasOne("SchoolSystem.Data.Gender", "IdGenderNavigation")
                        .WithMany("Schools")
                        .HasForeignKey("IdGender")
                        .HasConstraintName("FK__School__IdGender__28B808A7");

                    b.HasOne("SchoolSystem.Data.StatusSchool", "IdStatusSchoolNavigation")
                        .WithMany("Schools")
                        .HasForeignKey("IdStatusSchool")
                        .HasConstraintName("FK__School__IdStatus__22FF2F51");

                    b.Navigation("IdGenderNavigation");

                    b.Navigation("IdStatusSchoolNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.Student", b =>
                {
                    b.HasOne("SchoolSystem.Data.School", "IdSchoolNavigation")
                        .WithMany("Students")
                        .HasForeignKey("IdSchool")
                        .HasConstraintName("FK__Student__IdSchoo__24E777C3");

                    b.Navigation("IdSchoolNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentAverage", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("StudentAverages")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK__StudentAv__IdCla__03BB8E22");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("StudentAverages")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK__StudentAv__IdStu__02C769E9");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentClass", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("StudentClasses")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK_StudentClass_Class");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("StudentClasses")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK_StudentClass_Student");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentLectuer", b =>
                {
                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany("StudentLectuers")
                        .HasForeignKey("IdLectuer")
                        .HasConstraintName("FK_StudentLectuer_Lectuer");

                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("StudentLectuers")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK_StudentLectuer_Student");

                    b.Navigation("IdLectuerNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.StudentTeacher", b =>
                {
                    b.HasOne("SchoolSystem.Data.Student", "IdStudentNavigation")
                        .WithMany("StudentTeachers")
                        .HasForeignKey("IdStudent")
                        .HasConstraintName("FK_StudentTeacher_Student");

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany("StudentTeachers")
                        .HasForeignKey("IdTeacher")
                        .HasConstraintName("FK_StudentTeacher_Teacher");

                    b.Navigation("IdStudentNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.Teacher", b =>
                {
                    b.HasOne("SchoolSystem.Data.School", "IdSchoolNavigation")
                        .WithMany("Teachers")
                        .HasForeignKey("IdSchool")
                        .HasConstraintName("FK__Teacher__IdSchoo__25DB9BFC");

                    b.Navigation("IdSchoolNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.TeacherClass", b =>
                {
                    b.HasOne("SchoolSystem.Data.TheClass", "IdClassNavigation")
                        .WithMany("TeacherClasses")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK_TeacherClass_Class");

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany("TeacherClasses")
                        .HasForeignKey("IdTeacher")
                        .HasConstraintName("FK_TeacherClass_Teacher");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.TeacherLectuer", b =>
                {
                    b.HasOne("SchoolSystem.Data.Lectuer", "IdLectuerNavigation")
                        .WithMany("TeacherLectuers")
                        .HasForeignKey("IdLectuer")
                        .HasConstraintName("FK_TeacherLectuer_Lectuer");

                    b.HasOne("SchoolSystem.Data.Teacher", "IdTeacherNavigation")
                        .WithMany("TeacherLectuers")
                        .HasForeignKey("IdTeacher")
                        .HasConstraintName("FK_TeacherLectuer_Teacher");

                    b.Navigation("IdLectuerNavigation");

                    b.Navigation("IdTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.Data.Gender", b =>
                {
                    b.Navigation("Schools");
                });

            modelBuilder.Entity("SchoolSystem.Data.Lectuer", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("ClassLectuers");

                    b.Navigation("Grades");

                    b.Navigation("StudentLectuers");

                    b.Navigation("TeacherLectuers");
                });

            modelBuilder.Entity("SchoolSystem.Data.School", b =>
                {
                    b.Navigation("Menegars");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("SchoolSystem.Data.StatusSchool", b =>
                {
                    b.Navigation("Schools");
                });

            modelBuilder.Entity("SchoolSystem.Data.Student", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Grades");

                    b.Navigation("StudentAverages");

                    b.Navigation("StudentClasses");

                    b.Navigation("StudentLectuers");

                    b.Navigation("StudentTeachers");
                });

            modelBuilder.Entity("SchoolSystem.Data.Teacher", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Grades");

                    b.Navigation("StudentTeachers");

                    b.Navigation("TeacherClasses");

                    b.Navigation("TeacherLectuers");
                });

            modelBuilder.Entity("SchoolSystem.Data.TheClass", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("ClassLectuers");

                    b.Navigation("Grades");

                    b.Navigation("StudentAverages");

                    b.Navigation("StudentClasses");

                    b.Navigation("TeacherClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
